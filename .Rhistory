allTrees.out$DIA.AM         <- aggregate(FIA.out$DIA.AM         ~ FIA.out$PLT_CN, FUN='sum',na.rm=T, na.action=na.pass)[,2]
allTrees.out$PREVDIA.EITHER <- aggregate(FIA.out$PREVDIA.EITHER ~ FIA.out$PLT_CN, FUN='sum',na.rm=T, na.action=na.pass)[,2]
allTrees.out$DIA.EITHER     <- aggregate(FIA.out$DIA.EITHER     ~ FIA.out$PLT_CN, FUN='sum',na.rm=T, na.action=na.pass)[,2]
allTrees.out$PREVDIA.OTHER  <- aggregate(FIA.out$PREVDIA.OTHER  ~ FIA.out$PLT_CN, FUN='sum',na.rm=T, na.action=na.pass)[,2]
allTrees.out$DIA.OTHER      <- aggregate(FIA.out$DIA.OTHER      ~ FIA.out$PLT_CN, FUN='sum',na.rm=T, na.action=na.pass)[,2]
allTrees.out$PREVDIA.TOT    <- aggregate(FIA.out$PREVDIA        ~ FIA.out$PLT_CN, FUN='sum',na.rm=T, na.action=na.pass)[,2]
allTrees.out$DIA.TOT        <- aggregate(FIA.out$DIA            ~ FIA.out$PLT_CN, FUN='sum',na.rm=T, na.action=na.pass)[,2]
#aggregating data- Stem number
allTrees.out$PREVSTEM.EM        <- aggregate(FIA.out$PREVSTEM.EM        ~ FIA.out$PLT_CN, FUN='sum',na.rm=T, na.action=na.pass)[,2]
allTrees.out$STEM.EM            <- aggregate(FIA.out$STEM.EM            ~ FIA.out$PLT_CN, FUN='sum',na.rm=T, na.action=na.pass)[,2]
allTrees.out$PREVSTEM.AM        <- aggregate(FIA.out$PREVSTEM.AM        ~ FIA.out$PLT_CN, FUN='sum',na.rm=T, na.action=na.pass)[,2]
allTrees.out$STEM.AM            <- aggregate(FIA.out$STEM.AM            ~ FIA.out$PLT_CN, FUN='sum',na.rm=T, na.action=na.pass)[,2]
allTrees.out$PREVSTEM.EITHER    <- aggregate(FIA.out$PREVSTEM.EITHER    ~ FIA.out$PLT_CN, FUN='sum',na.rm=T, na.action=na.pass)[,2]
allTrees.out$STEM.EITHER        <- aggregate(FIA.out$STEM.EITHER        ~ FIA.out$PLT_CN, FUN='sum',na.rm=T, na.action=na.pass)[,2]
allTrees.out$PREVSTEM.OTHER     <- aggregate(FIA.out$PREVSTEM.OTHER     ~ FIA.out$PLT_CN, FUN='sum',na.rm=T, na.action=na.pass)[,2]
allTrees.out$STEM.OTHER         <- aggregate(FIA.out$STEM.OTHER         ~ FIA.out$PLT_CN, FUN='sum',na.rm=T, na.action=na.pass)[,2]
test.fun<- function(x) sum(!is.na(x))
allTrees.out$PREVSTEM.TOT       <- aggregate(FIA.out$PREVDIA            ~ FIA.out$PLT_CN, FUN='test.fun',     na.action=na.pass)[,2]
allTrees.out$STEM.TOT           <- aggregate(FIA.out$DIA                ~ FIA.out$PLT_CN, FUN='test.fun',     na.action=na.pass)[,2]
#pop in other relevant site data. Using the 'median' function in aggregate
#beacause each site has 1 unique value in the mycFIA.out.rds file, replicated over every tree observation
#there is probably a much faster way to do this.
allTrees.out$REMPER              <- aggregate(FIA.out$REMPER      ~ FIA.out$PLT_CN, FUN='median',na.rm=T,na.action=na.pass)[,2]
allTrees.out$prevTPA             <- aggregate(FIA.out$PREVTPAsum  ~ FIA.out$PLT_CN, FUN='median',na.rm=T,na.action=na.pass)[,2]
allTrees.out$TPA                 <- aggregate(FIA.out$TPAsum      ~ FIA.out$PLT_CN, FUN='median',na.rm=T,na.action=na.pass)[,2]
allTrees.out$latitude            <- aggregate(FIA.out$LAT         ~ FIA.out$PLT_CN, FUN='median',na.rm=T,na.action=na.pass)[,2]
allTrees.out$longitude           <- aggregate(FIA.out$LON         ~ FIA.out$PLT_CN, FUN='median',na.rm=T,na.action=na.pass)[,2]
allTrees.out$elevation           <- aggregate(FIA.out$ELEV        ~ FIA.out$PLT_CN, FUN='median',na.rm=T,na.action=na.pass)[,2]
Soils<- read.csv('FIA_soils/FIAsoil_output_CA.csv')
Trees.Soils <- merge(allTrees.out,Soils,by = "PLT_CN")
nrow(Trees.Soils)
write.csv(Trees.Soils, file="analysis_data/soilC.stock.Trees.Soils")
require(raster)
require(rgdal)
trees.soils <- read.csv('analysis_data/soilC.stock.Trees.Soils')
map.PRISM <- raster('required_products_utilities/PRISM_ppt_30yr_normal_800mM2_annual_bil.bil')
mat.PRISM <- raster('required_products_utilities/PRISM_tmean_30yr_normal_800mM2_annual_bil.bil')
points<- cbind(trees.soils$longitude,trees.soils$latitude)
map   <- extract(map.PRISM, points)
mat   <- extract(mat.PRISM, points)
trees.soils$map <- map
trees.soils$mat <- mat
write.csv(trees.soils, file='analysis_data/soilC.stock.Trees.Soils')
trees.soils <- read.csv('analysis_data/soilC.stock.Trees.Soils')
head(trees.soils)
min(trees.soils$map)
min(trees.soils$mat)
nrow(trees.soils)
d<- read.csv('soilC.stock.Trees.Soils')
d<- read.csv('analysis_data/soilC.stock.Trees.Soils')
head(d)
nrow(d)
d$relEM<- d$DIA.EM / (d$DIA.EM + d$DIA.AM + d$DIA.EITHER + d$DIA.OTHER)
m1<- lm(C.storage~relEM,data=d)
plot(residuals(m1)~fitted(m1))
plot(C.storage~relEM,data=d)
summary(m1)
m1<- lm(log(C.storage) ~ log(N.storage)*relEM+ pH_H2O,data=subset(d,d$cn<80))
head(d)
d$cn<- d$C.storage/d$N.storage
m1<- lm(log(C.storage) ~ log(N.storage)*relEM+ pH_H2O,data=subset(d,d$cn<80))
plot(residuals(m1)~fitted(m1))
summary(m1)
m2<- lm(cn~relEM+pH_H2O,data=subset(d,d$cn<80))
plot(residuals(m2)~fitted(m2))
summary(m2)
plot(cn~relEM,data=subset(d,d$cn<80))
require(car)
vif(m2)
plot(pH_H2O~relEM,data=d)
summary(lm(pH_H2O~relEM,data=d)) #all EM only drops pH about half a unit.
m2<- lm(cn~relEM+pH_H2O+mat+map,data=subset(d,d$cn<80))
plot(residuals(m2)~fitted(m2))
summary(m2)
plot(cn~relEM,data=subset(d,d$cn<80))
vif(m2)
require(ggplot2)
library(grid)
require(wesanderson)
install.packages("wesanderson")
require(wesanderson)
rbPal<- colorRampPalette(wes_palette(21, name = "Darjeeling", type = "continuous"))
d$col<- rbPal(50)[as.numeric(cut(d$C,breaks=50))]
#make map
mp <- NULL
#grab world map and choose colors
mapWorld <- borders("world", colour=wes_palette(4,name="GrandBudapest")[1],fill='black', lwd=0.125)
mp <- ggplot() +   mapWorld
#add points to map
mp <- mp+ geom_point(aes(x=d$longitude, y=d$latitude) ,color='green', size=1.2)
#change up bacground gridlines, labels and colors.
mp<- mp + theme(axis.text.y=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
axis.ticks=element_blank(),
panel.background = element_rect(fill='black'),
plot.background = element_rect(fill='black'),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank())
mp
#make map
mp <- NULL
#grab world map and choose colors
mapWorld <- borders("usa", colour=wes_palette(4,name="GrandBudapest")[1],fill='black', lwd=0.125)
mp <- ggplot() +   mapWorld
#add points to map
mp <- mp+ geom_point(aes(x=d$longitude, y=d$latitude) ,color='green', size=1.2)
#change up bacground gridlines, labels and colors.
mp<- mp + theme(axis.text.y=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
axis.ticks=element_blank(),
panel.background = element_rect(fill='black'),
plot.background = element_rect(fill='black'),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank())
mp
#make map
mp <- NULL
#grab world map and choose colors
mapWorld <- borders("USA", colour=wes_palette(4,name="GrandBudapest")[1],fill='black', lwd=0.125)
mp <- ggplot() +   mapWorld
#add points to map
mp <- mp+ geom_point(aes(x=d$longitude, y=d$latitude) ,color='green', size=1.2)
#change up bacground gridlines, labels and colors.
mp<- mp + theme(axis.text.y=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
axis.ticks=element_blank(),
panel.background = element_rect(fill='black'),
plot.background = element_rect(fill='black'),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank())
mp
#make some colors for the points that scale with soil C concentration
rbPal<- colorRampPalette(wes_palette(21, name = "Zissou", type = "continuous"))
d$col<- rbPal(50)[as.numeric(cut(d$C,breaks=50))]
#make map
mp <- NULL
#grab world map and choose colors
mapWorld <- borders("usa", colour=wes_palette(1,name="GrandBudapest"),fill='black', lwd=0.4)
mp <- ggplot() +   mapWorld
#add points to map
mp <- mp+ geom_point(aes(x=d$longitude, y=d$latitude) ,color='green', size=1.2)
#change up bacground gridlines, labels and colors.
mp<- mp + theme(axis.text.y=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
axis.ticks=element_blank(),
panel.background = element_rect(fill='black'),
plot.background = element_rect(fill='black'),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank())
mp
#make map
mp <- NULL
#grab world map and choose colors
mapWorld <- borders("usa", colour=wes_palette(1,name="GrandBudapest"),fill='black', lwd=0.4)
mp <- ggplot() +   mapWorld
#add points to map
mp <- mp+ geom_point(aes(x=d$longitude, y=d$latitude) ,color=d$col, size=1.6)
#change up bacground gridlines, labels and colors.
mp<- mp + theme(axis.text.y=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
axis.ticks=element_blank(),
panel.background = element_rect(fill='black'),
plot.background = element_rect(fill='black'),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank())
mp
head(d)
d$col<- rbPal(50)[as.numeric(cut(d$C.storage,breaks=50))]
#make map
mp <- NULL
#grab world map and choose colors
mapWorld <- borders("usa", colour=wes_palette(1,name="GrandBudapest"),fill='black', lwd=0.4)
mp <- ggplot() +   mapWorld
#add points to map
mp <- mp+ geom_point(aes(x=d$longitude, y=d$latitude) ,color=d$col, size=1.6)
#change up bacground gridlines, labels and colors.
mp<- mp + theme(axis.text.y=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
axis.ticks=element_blank(),
panel.background = element_rect(fill='black'),
plot.background = element_rect(fill='black'),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank())
mp
#make some colors for the points that scale with soil C concentration
rbPal<- colorRampPalette(wes_palette(21, name = "Zissou", type = "continuous"))
d$col<- rbPal(50)[as.numeric(cut(log(d$C.storage),breaks=20))]
#make map
mp <- NULL
#grab world map and choose colors
mapWorld <- borders("usa", colour=wes_palette(1,name="GrandBudapest"),fill='black', lwd=0.4)
mp <- ggplot() +   mapWorld
#add points to map
mp <- mp+ geom_point(aes(x=d$longitude, y=d$latitude) ,color=d$col, size=1.6)
#change up bacground gridlines, labels and colors.
mp<- mp + theme(axis.text.y=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
axis.ticks=element_blank(),
panel.background = element_rect(fill='black'),
plot.background = element_rect(fill='black'),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank())
mp
d$col<- rbPal(50)[as.numeric(cut(log(d$C.storage),breaks=20))]
d$col
mp <- NULL
#grab world map and choose colors
mapWorld <- borders("usa", colour=wes_palette(1,name="GrandBudapest"),fill='black', lwd=0.4)
mp <- ggplot() +   mapWorld
#add points to map
mp <- mp+ geom_point(aes(x=d$longitude, y=d$latitude) ,color=d$col, size=1.6)
#change up bacground gridlines, labels and colors.
mp<- mp + theme(axis.text.y=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
axis.ticks=element_blank(),
panel.background = element_rect(fill='black'),
plot.background = element_rect(fill='black'),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank())
mp
#make some colors for the points that scale with soil C concentration
rbPal<- colorRampPalette(wes_palette(21, name = "Zissou", type = "continuous"))
d$col<- rbPal(50)[as.numeric(cut(log(d$C.storage),breaks=50))]
#make map
mp <- NULL
#grab world map and choose colors
mapWorld <- borders("usa", colour=wes_palette(1,name="GrandBudapest"),fill='black', lwd=0.4)
mp <- ggplot() +   mapWorld
#add points to map
mp <- mp+ geom_point(aes(x=d$longitude, y=d$latitude) ,color=d$col, size=1.6)
#change up bacground gridlines, labels and colors.
mp<- mp + theme(axis.text.y=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
axis.ticks=element_blank(),
panel.background = element_rect(fill='black'),
plot.background = element_rect(fill='black'),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank())
mp
#make some colors for the points that scale with soil C concentration
rbPal<- colorRampPalette(wes_palette(21, name = "Zissou", type = "continuous"))
d$col<- rbPal(50)[as.numeric(cut(log(d$C.storage),breaks=10))]
#make map
mp <- NULL
#grab world map and choose colors
mapWorld <- borders("usa", colour=wes_palette(1,name="GrandBudapest"),fill='black', lwd=0.4)
mp <- ggplot() +   mapWorld
#add points to map
mp <- mp+ geom_point(aes(x=d$longitude, y=d$latitude) ,color=d$col, size=1.6)
#change up bacground gridlines, labels and colors.
mp<- mp + theme(axis.text.y=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
axis.ticks=element_blank(),
panel.background = element_rect(fill='black'),
plot.background = element_rect(fill='black'),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank())
mp
#make some colors for the points that scale with soil C concentration
rbPal<- colorRampPalette(wes_palette(21, name = "Zissou", type = "continuous"))
d$col<- rbPal(50)[as.numeric(cut(log(d$C.storage),breaks=100))]
#make map
mp <- NULL
#grab world map and choose colors
mapWorld <- borders("usa", colour=wes_palette(1,name="GrandBudapest"),fill='black', lwd=0.4)
mp <- ggplot() +   mapWorld
#add points to map
mp <- mp+ geom_point(aes(x=d$longitude, y=d$latitude) ,color=d$col, size=1.6)
#change up bacground gridlines, labels and colors.
mp<- mp + theme(axis.text.y=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
axis.ticks=element_blank(),
panel.background = element_rect(fill='black'),
plot.background = element_rect(fill='black'),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank())
mp
#make some colors for the points that scale with soil C concentration
rbPal<- colorRampPalette(wes_palette(21, name = "Zissou", type = "continuous"))
d$col<- rbPal(50)[as.numeric(cut(log(d$C.storage),breaks=60))]
#make map
mp <- NULL
#grab world map and choose colors
mapWorld <- borders("usa", colour=wes_palette(1,name="GrandBudapest"),fill='black', lwd=0.4)
mp <- ggplot() +   mapWorld
#add points to map
mp <- mp+ geom_point(aes(x=d$longitude, y=d$latitude) ,color=d$col, size=1.6)
#change up bacground gridlines, labels and colors.
mp<- mp + theme(axis.text.y=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
axis.ticks=element_blank(),
panel.background = element_rect(fill='black'),
plot.background = element_rect(fill='black'),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank())
mp
#make some colors for the points that scale with soil C concentration
rbPal<- colorRampPalette(wes_palette(21, name = "Zissou", type = "continuous"))
d$col<- rbPal(50)[as.numeric(cut(log(d$C.storage),breaks=21))]
#make map
mp <- NULL
#grab world map and choose colors
mapWorld <- borders("usa", colour=wes_palette(1,name="GrandBudapest"),fill='black', lwd=0.4)
mp <- ggplot() +   mapWorld
#add points to map
mp <- mp+ geom_point(aes(x=d$longitude, y=d$latitude) ,color=d$col, size=1.6)
#change up bacground gridlines, labels and colors.
mp<- mp + theme(axis.text.y=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
axis.ticks=element_blank(),
panel.background = element_rect(fill='black'),
plot.background = element_rect(fill='black'),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank())
mp
rbPal
d$col<- colour=wes_palette(3,name="GrandBudapest")[3]
d$col<- colour=wes_palette(3,name="GrandBudapest")[3]
d$col<- wes_palette(3,name="GrandBudapest")[3]
#make map
mp <- NULL
#grab world map and choose colors
mapWorld <- borders("usa", colour=wes_palette(1,name="GrandBudapest"),fill='black', lwd=0.4)
mp <- ggplot() +   mapWorld
#add points to map
mp <- mp+ geom_point(aes(x=d$longitude, y=d$latitude) ,color=d$col, size=1.6)
#change up bacground gridlines, labels and colors.
mp<- mp + theme(axis.text.y=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
axis.ticks=element_blank(),
panel.background = element_rect(fill='black'),
plot.background = element_rect(fill='black'),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank())
mp
d$col<- wes_palette(3,name="GrandBudapest")[2]
#make map
mp <- NULL
#grab world map and choose colors
mapWorld <- borders("usa", colour=wes_palette(1,name="GrandBudapest"),fill='black', lwd=0.4)
mp <- ggplot() +   mapWorld
#add points to map
mp <- mp+ geom_point(aes(x=d$longitude, y=d$latitude) ,color=d$col, size=1.6)
#change up bacground gridlines, labels and colors.
mp<- mp + theme(axis.text.y=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
axis.ticks=element_blank(),
panel.background = element_rect(fill='black'),
plot.background = element_rect(fill='black'),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank())
mp
# --- Query
cat("Query TREE_GRM_ESTN...\n")
query = paste('SELECT
plt_cn, invyr, tpagrow_unadj, dia_begin, dia_end, component, tre_cn, remper, statecd
FROM tree_grm_estn WHERE ',
'estn_type=\'AL\' AND land_basis=\'TIMBERLAND\'')
tic()
GRM = as.data.table(db.query(query, con=fia.con))
setnames(GRM, toupper(names(GRM)))
toc()
# --- Filtering
cat("Filtering TREE_GRM_ESTN...\n")
m2<- lm(cn~relEM+pH_H2O+mat+map,data=subset(d,d$cn<80))
summary(m2)
m2<- lm(cn~pH_H2O+mat+map,data=subset(d,d$cn<80))
summary(m2)
m2<- lm(cn~relEM+pH_H2O+mat+map,data=subset(d,d$cn<80))
summary(m2)
vif(m2)
plot(relEM~mat,data=d)
summary(lm(relEM~mat,data=d))
m1<- lm(log(C.storage) ~ log(N.storage)*relEM+ pH_H2O + mat + map,data=subset(d,d$cn<80))
plot(residuals(m1)~fitted(m1))
summary(m1)
d$resid<- residuals(lm(log(C.storage~log(N.storage))))
d$resid<- residuals(lm(log(C.storage)~log(N.storage)))
d$resid<- residuals(lm(log(C.storage)~log(N.storage),data=d))
plot(resid~mat,data=d)
plot(resid~map,data=d)
plot(resid~pH_H2O,data=d)
plot(resid~relEM,data=d)
summary(lm(resid~relEM + pH_H2O + mat + map, data=d))
summary(lm(resid~pH_H2O))
summary(lm(resid~pH_H2O,data=d))
summary(lm(resid~relEM,data=d))
summary(lm(resid~mat,data=d))
summary(lm(resid~map,data=d))
summary(lm(resid~relEM + pH_H2O + mat + map, data=d))
qqnorm(residuals(m1))
plot(residuals(m1)~fitted(m1))
vif(m1)
m1<-lm(resid~relEM + pH_H2O + mat + map, data=d)
qqnorm(residuals(m1))
plot(residuals(m1)~fitted(m1))
vif(m1)
summary(m1)
m1<-lm(resid~relEM:log(N.storage) + pH_H2O + mat + map, data=d)
m1<-lm(resid~relEM*log(N.storage) + pH_H2O + mat + map, data=d)
qqnorm(residuals(m1))
plot(residuals(m1)~fitted(m1))
vif(m1)
summary(m1)
d$interaction<= d$relEM* log(d$N.storage)
d$relEM * log(d$N.storage)
d$interaction<- d$relEM * log(d$N.storage)
m1<- lm(resid ~ interaction + pH_H2O + mat + map,data=d)
qqnorm(residuals(m1))
plot(residuals(m1)~fitted(m1))
vif(m1)
summary(m1)
m1<- lm(resid ~ interaction + relEM + pH_H2O + mat + map,data=d)
vif(m1)
summary(m1)
m1<- lm(resid ~ interaction + pH_H2O + mat + map,data=d)
summary(m1)
summary(lm(resid~interaction,data=d))
summary(lm(resid~relEM,data=d))
summary(lm(resid~pH_H2O,data=d))
plot(resid~interaction,data=d)
plot(resid~pH_H2O,data=d)
abline(lm((resid~pH_H2O,data=d)),lty=2,lwd=2,col='purple')
abline(lm((d$resid~d$pH_H2O)),lty=2,lwd=2,col='purple')
abline(lm((d$resid~d$pH_H2O)),lty=2,lwd=3,col='purple')
plot(resid~relEM,data=d)
hist(d$relEM)
plot(d$resid~fitted(m1))
dat<- data.frame(d$C.storage,d$N.storage,d$pH_H2O,d$relEM,d$mat,d$map)
nrow(dat)
dat<-na.omit(dat)
nrow(dat)
dat<- data.frame(d$C.storage,d$N.storage,d$resid,d$pH_H2O,d$relEM,d$mat,d$map)
dat<-na.omit(dat)
plot(dat$resid~fitted(m1))
head(dat)
plot(dat$resid~fitted(m1))
m1<- lm(resid~relEM*log(N.storage) + pH_H2O + mat + map, data=dat)
dat<- data.frame(d$C.storage,d$N.storage,d$resid,d$pH_H2O,d$relEM,d$mat,d$map)
dat<-na.omit(dat)
m1<- lm(resid~relEM*log(N.storage) + pH_H2O + mat + map, data=dat)
head(dat)
colnames(dat)
colnames(dat) <- c('C.storage','N.storage','resid','pH_H2O','relEM','mat','map')
m1<- lm(resid~relEM*log(N.storage) + pH_H2O + mat + map, data=dat)
dat$fitted <- fitted(m1)
plot(dat$resid~dat$fitted)
plot(dat$resid~dat$fitted, pch=16, cex=0.6)
abline(lm(dat$dat$fitted),lwd=3, col='red')
abline(lm(dat$resid~dat$fitted),lwd=3, col='red')
mtext('R2 = 0.45',side=3,line=-2)
mtext('R2 = 0.45',side=3,line=-2,at=-0.75)
mtext('R2 = 0.45',side=3,line=-2,at=-0.75,cex=2)
plot(dat$resid~dat$fitted, pch=16, cex=0.6)
abline(lm(dat$resid~dat$fitted),lwd=3, col='red')
mtext('R2 = 0.45',side=3,line=-2,at=-0.75,cex=2)
head(d)
plot(m.C.storage~m.BrayP.storage,data=d)
plot(m.C.storage~m.BrayP.storage,data=subset(d,d$m.BrayP.storage<100000))
plot(m.C.storage~m.OlsenP.storage,data=subset(d,d$m.BrayP.storage<100000))
plot(m.C.storage~m.NA.storage,data=subset(d,d$m.BrayP.storage<100000))
plot(m.C.storage~m.Na.storage,data=subset(d,d$m.BrayP.storage<100000))
plot(m.C.storage~m.Na.storage,data=subset(d,d$m.Na.storage<500000))
plot(m.C.storage~m.Na.storage,data=subset(d,d$m.Na.storage<50000))
plot(m.C.storage~m.Al.storage,data=subset(d,d$m.Na.storage<50000))
plot(m.C.storage~m.Al.storage,data=subset(d,d$m.Cu.storage<50000))
plot(m.C.storage~m.Al.storage,data=subset(d,d$m.Ni.storage<50000))
plot(m.C.storage~m.Ni.storage,data=subset(d,d$m.Ni.storage<50000))
plot(m.C.storage~m.Ni.storage,data=subset(d,d$m.Ni.storage<1000))
plot(m.C.storage~m.BrayP.storage,data=subset(d,d$m.Ni.storage<1000))
dP<- subset(d,d$m.P.storage<100000)
plot(m.C.storage~m.BrayP.storage,data=dP)
dP<- subset(d,d$m.P.storage<100000)
plot(m.C.storage~m.BrayP.storage,data=dP)
head(dP)
dP<- subset(d,d$m.BrayP.storage<100000)
plot(m.C.storage~m.BrayP.storage,data=dP)
plot(log(m.C.storage)~log(m.BrayP.storage),data=dP)
m1<-lm(log(m.C.storage)~log(m.BrayP.storage)*relEM + pH_H2O + mat + map, data=dP)
plot(residuals(m1)~fitted(m1))
vif(m1)
summary(m1)
